# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryEntity {
  coverImage: String
  createAt: DateTime!
  id: Float!
  name: String!
  store: [StoreEntity!]
  storeCount: Float!
  updateAt: DateTime!
}

input CreateInputDto {
  accountId: String!
  email: String!
  nickname: String!
  password: String!
  role: String = "client"
}

type CreateOutputDto {
  access: Boolean!
  errorMessage: String
}

input CreateStoreInputDto {
  address: String!
  categoryName: String!
  coverImage: String
  name: String!
}

type CreateStoreOutputDto {
  access: Boolean!
  errorMessage: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteStoreInputDto {
  storeId: Float!
}

type DeleteStoreOutputDto {
  access: Boolean!
  errorMessage: String
}

input EditProfileInputDto {
  email: String
  nickname: String
  password: String
}

type EditProfileOutputDto {
  access: Boolean!
  errorMessage: String
  user: UsersEntity!
}

input EditStoreInputDto {
  address: String
  coverImage: String
  name: String
  storeId: Float!
}

type EditStoreOutputDto {
  access: Boolean!
  errorMessage: String
}

type GetAllCategoryOutputDto {
  access: Boolean!
  categories: [CategoryEntity!]
  errorMessage: String
}

input GetAllStoreInputDto {
  page: Float = 1
}

type GetAllStoreOutputDto {
  access: Boolean!
  errorMessage: String
  resultCount: Float
  stores: [StoreEntity!]
  totalPages: Float
}

input GetOneCategoryInputDto {
  name: String!
  page: Float = 1
}

type GetOneCategoryOutputDto {
  access: Boolean!
  category: CategoryEntity
  errorMessage: String
  resultCount: Float
  totalPages: Float
}

input GetOneStoreInputDto {
  storeId: Float!
}

type GetOneStoreOutputDto {
  access: Boolean!
  errorMessage: String
  store: StoreEntity
}

input LoginInputDto {
  accountId: String!
  password: String!
}

type LoginOutputDto {
  access: Boolean!
  access_token: String
  errorMessage: String
  user: UsersEntity
}

type Mutation {
  checkAccountId(input: String!): Boolean!
  checkEmail(input: String!): Boolean!
  checkNickname(input: String!): Boolean!
  createAccount(input: CreateInputDto!): CreateOutputDto!
  createStore(input: CreateStoreInputDto!): CreateStoreOutputDto!
  deleteStore(input: DeleteStoreInputDto!): DeleteStoreOutputDto!
  editProfile(input: EditProfileInputDto!): EditProfileOutputDto!
  editStore(input: EditStoreInputDto!): EditStoreOutputDto!
  loginAccount(input: LoginInputDto!): LoginOutputDto!
  uploadAvatarImage(file: Upload!): Boolean!
}

type Query {
  getAllCategories: GetAllCategoryOutputDto!
  getAllStore(input: GetAllStoreInputDto!): GetAllStoreOutputDto!
  getOneCategory(input: GetOneCategoryInputDto!): GetOneCategoryOutputDto!
  getOneStore(input: GetOneStoreInputDto!): GetOneStoreOutputDto!
  userState: UsersEntity!
}

type StoreEntity {
  address: String!
  category: String!
  coverImage: String
  createAt: DateTime!
  id: Float!
  name: String!
  owner: UsersEntity!
  updateAt: DateTime!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UsersEntity {
  accountId: String!
  createAt: DateTime!
  email: String!
  id: Float!
  nickname: String!
  password: String!
  role: String!
  stores: [StoreEntity!]!
  updateAt: DateTime!
}
